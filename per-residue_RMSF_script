import os
import numpy as np
import pandas as pd
import glob

pdb_folder = "/input_file_path/" #folder path for input folder containing individual PDB files of one conformational ensemble
output_file = "/output_file_path/output_RMSF_file.xlsx" #file path for output Excel file

def align_structures(reference, target):
    ref_center = np.mean(reference, axis=0)
    target_center = np.mean(target, axis=0)
    ref_centered = reference - ref_center
    target_centered = target - target_center
    covariance_matrix = np.dot(target_centered.T, ref_centered)
    U, S, Vt = np.linalg.svd(covariance_matrix)
    R = np.dot(U, Vt)
    if np.linalg.det(R) < 0:
        Vt[-1, :] *= -1
        R = np.dot(U, Vt)
    aligned = np.dot(target_centered, R) + ref_center
    return aligned

def parse_pdb(filepath):
    coords = []
    residue_info = []
    with open(filepath, 'r') as f:
        for line in f:
            if line.startswith("ATOM") and line[12:16].strip() == "CA":
                coords.append([float(line[30:38]), float(line[38:46]), float(line[46:54])])
                residue_info.append((line[21], int(line[22:26].strip()), line[17:20].strip()))
    return np.array(coords), residue_info

def calculate_rmsf(reference_coords, pdb_files):
    deviations = {i: [] for i in range(len(reference_coords))}
    for pdb_file in pdb_files:
        target_coords, _ = parse_pdb(pdb_file)
        aligned_coords = align_structures(reference_coords, target_coords)
        for i in range(len(reference_coords)):
            deviation = np.linalg.norm(aligned_coords[i] - reference_coords[i])
            deviations[i].append(deviation)
    rmsf_values = [np.sqrt(np.mean(np.square(deviations[i]))) for i in deviations]
    return rmsf_values

def main(pdb_folder, output_file):
    pdb_files = sorted(glob.glob(os.path.join(pdb_folder, "*.pdb")))
    if not pdb_files:
        print("No PDB files found in the folder.")
        return
    print(f"Processing PDB files in folder: {pdb_folder}")
    reference_coords, residue_info = parse_pdb(pdb_files[0])
    rmsf_values = calculate_rmsf(reference_coords, pdb_files)
    output_data = [
        {
            "Chain ID": residue[0],
            "Residue Name": residue[2],
            "Residue Number": residue[1],
            "RMSF (Ã…)": rmsf
        }
        for residue, rmsf in zip(residue_info, rmsf_values)
    ]
    output_df = pd.DataFrame(output_data)
    output_df.to_excel(output_file, index=False)
    print(f"RMSF results saved to: {output_file}")

if __name__ == "__main__":
    main(pdb_folder, output_file)
